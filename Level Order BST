class BST
{
    
    List<List<Integer>> level;
    public List<List<Integer>> levelOrder(TreeNode root)
    {
        if(root==null)
            return level;
        level = new ArrayList<List<Integer>>();
        Queue <TreeNode> Q = new LinkedList<>();
        Q.offer(root);
        
        bfs(Q);
        
        return level;
    }
    
    private void bfs(Queue <TreeNode> q)
    {
        Queue <TreeNode> next = new LinkedList<>();
        List<Integer> list = new ArrayList<>();
        
        while(!q.isEmpty())
        {   
            TreeNode current = q.poll();
            list.add(current.val);
            
            if(current.left!=null)
                next.offer(current.left);
            if(current.right!=null)
                next.offer(current.right);
            if(q.isEmpty())
            {
                level.add(list);
                bfs(next);
            }
        }        
       
    }
}
